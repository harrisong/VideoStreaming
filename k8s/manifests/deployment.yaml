apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-streaming-app
  namespace: video-streaming
  labels:
    app: video-streaming-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: video-streaming-app
  template:
    metadata:
      labels:
        app: video-streaming-app
    spec:
      containers:
      # Nginx Proxy Container (built into frontend)
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        livenessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      # Frontend Container
      - name: frontend
        image: PLACEHOLDER_ECR_REGISTRY/PLACEHOLDER_ENVIRONMENT-video-streaming-frontend:latest
        ports:
        - containerPort: 3000
          name: frontend
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: video-streaming-config
              key: NODE_ENV
        - name: REACT_APP_API_URL
          valueFrom:
            configMapKeyRef:
              name: video-streaming-config
              key: REACT_APP_API_URL
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      
      # Backend Container
      - name: backend
        image: PLACEHOLDER_ECR_REGISTRY/PLACEHOLDER_ENVIRONMENT-video-streaming-backend:latest
        ports:
        - containerPort: 5050
          name: api
        - containerPort: 8080
          name: websocket
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: REDIS_URL
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: S3_BUCKET
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: AWS_REGION
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: video-streaming-secrets
              key: JWT_SECRET
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: video-streaming-config
              key: CORS_ALLOWED_ORIGINS
        - name: RUST_LOG
          valueFrom:
            configMapKeyRef:
              name: video-streaming-config
              key: RUST_LOG
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5050
          initialDelaySeconds: 300
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5050
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      
      # Volumes for nginx configuration
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      
      # Service Account for AWS permissions
      serviceAccountName: video-streaming-sa
      
      # Node selector for better scheduling
      nodeSelector:
        kubernetes.io/arch: amd64
      
      # Tolerations for spot instances (optional)
      tolerations:
      - key: "node.kubernetes.io/spot"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
